// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ori --help: A2 1`] = `
"Usage: ori <command> [options]

Options:
  -h, --help                 display help for command

Commands:
  init [options] <app-name>  init a new project
  dev                        alias of \\"ori dev\\" in the current project
  build                      alias of \\"ori build\\" in the current project
  tovite [options]           use vite in the current project
  tovue3 [options]           use vue-next in the current project
  help [command]             display help for command"
`;

exports[`ori -h: A1 1`] = `
"Usage: ori <command> [options]

Options:
  -h, --help                 display help for command

Commands:
  init [options] <app-name>  init a new project
  dev                        alias of \\"ori dev\\" in the current project
  build                      alias of \\"ori build\\" in the current project
  tovite [options]           use vite in the current project
  tovue3 [options]           use vue-next in the current project
  help [command]             display help for command"
`;

exports[`ori init --help: A5 1`] = `
"Usage: ori init [options] <app-name>

init a new project

Options:
  -d, --default      skip init project options
  -a, --all-plugins  create project with all plugins
  -u, --uninstalled  skip install denpendencies
  -h, --help         display help for command"
`;

exports[`ori init with all plugins: A3 1`] = `
"<template>
  <main :class=\\"isLight ? 'light' : 'dark'\\">
    <router-view />
    <div>
      <button
        type=\\"button\\"
        @click=\\"changeMode\\"
        class=\\"normal-btn theme-ctrl-btn\\"
      >
        {{ !isLight ? $t('lightMode') : $t('darkMode') }}
      </button>
      <button
        type=\\"button\\"
        @click=\\"changeLocale\\"
        class=\\"normal-btn theme-ctrl-btn\\"
      >
        {{ $t(\\"changeLanguage\\") }}
      </button>
    </div>
  </main>
</template>

<script>
import { ref } from 'vue'
import { useI18n } from 'vue-i18n'

export default {
  name: 'App',
  setup: () => {
    const isLight = ref(true)

    const changeMode = () => {
      isLight.value = !isLight.value
    }

    const { locale } = useI18n()
    const changeLocale = () => {
      if (locale.value === 'en') {
        locale.value = 'zh'
      } else if (locale.value === 'zh') {
        locale.value = 'en'
      }
    }

    return { isLight, changeMode, changeLocale }
  }
}
</script>

<style scoped>
#app main {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  height: calc(100vh - 3.2rem);
  padding: 1rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
</style>
"
`;

exports[`ori init with all plugins: A3 2`] = `
"import { createApp } from 'vue'
import { createI18n } from 'vue-i18n'
import { createRouter, createWebHistory } from 'vue-router'
import en from './locales/en.json'
import zh from './locales/zh.json'
import App from './App.vue'
import store from './store'
import routes from 'virtual:plugin-pages'

const router = createRouter({
  history: createWebHistory(),
  routes,
})

const i18n = createI18n({
  legacy: false,
  globalInjection: true,
  locale: 'en',
  fallbackLocale: 'en',
  messages: {
    en,
    zh
  }
})

createApp(App).use(router).use(store).use(i18n).mount('#app')
"
`;

exports[`ori init with all plugins: A3 3`] = `
"{
  \\"name\\": \\"test_all_plugins\\",
  \\"version\\": \\"1.0.0\\",
  \\"license\\": \\"ISC\\",
  \\"scripts\\": {
    \\"dev\\": \\"vite\\",
    \\"build\\": \\"vite build\\",
    \\"serve\\": \\"vite preview\\"
  },
  \\"dependencies\\": {
    \\"vue\\": \\"^3.0.5\\",
    \\"vue-i18n\\": \\"^9.2.0-beta.9\\",
    \\"vue-router\\": \\"^4.0.11\\",
    \\"vuex\\": \\"^4.0.2\\"
  },
  \\"devDependencies\\": {
    \\"@originjs/vite-plugin-global-style\\":\\"latest\\",
    \\"unplugin-vue-components\\":\\"latest\\",
    \\"@originjs/vite-plugin-content\\":\\"latest\\",
    \\"@originjs/vite-plugin-pages\\":\\"latest\\",
    \\"vite-plugin-md\\":\\"latest\\",
    \\"@intlify/vue-i18n-loader\\": \\"^3.0.0\\",
    \\"@vitejs/plugin-vue\\": \\"^1.3.0\\",
    \\"@vue/compiler-sfc\\": \\"^3.0.5\\",
    \\"typescript\\": \\"^4.3.2\\",
    \\"vite\\": \\"^2.4.4\\",
    \\"vue-tsc\\": \\"^0.2.2\\"
  }
}
"
`;

exports[`ori init with all plugins: A3 4`] = `
"import { defineConfig } from 'vite'
import path from 'path'
import vue from '@vitejs/plugin-vue'
import globalStyle from '@originjs/vite-plugin-global-style'
import components from 'unplugin-vue-components/vite'
import content from '@originjs/vite-plugin-content'
import pages from '@originjs/vite-plugin-pages'
import markdown from 'vite-plugin-md'

// https://vitejs.dev/config/
export default defineConfig({
  resolve: {
    alias: [{
      find: '@',
      replacement: path.resolve(__dirname, 'src'),
    }],
  },
  plugins:[
    vue({
      include: [/\\\\.vue$/, /\\\\.md$/]
    }),
    globalStyle(),
    components({
      // allow auto load markdown components under \`./src/components/\`
      extensions: ['vue', 'md'],
      // allow typescript
      dts: true,
      // allow auto import and register components used in markdown
      include: [/\\\\.vue$/, /\\\\.vue\\\\?vue/, /\\\\.md$/],
    }),
    content(),
    pages(),
    markdown()
  ],
  define: {
    __VUE_I18N_FULL_INSTALL__: true,
    __VUE_I18N_LEGACY_API__: true,
  }
})
"
`;

exports[`ori init without plugins: A4 1`] = `
"<template>
  <main :class=\\"isLight ? 'light' : 'dark'\\">
    <router-view />
    <div>
      <button
        type=\\"button\\"
        @click=\\"changeMode\\"
        class=\\"normal-btn theme-ctrl-btn\\"
      >
        {{ !isLight ? $t('lightMode') : $t('darkMode') }}
      </button>
      <button
        type=\\"button\\"
        @click=\\"changeLocale\\"
        class=\\"normal-btn theme-ctrl-btn\\"
      >
        {{ $t(\\"changeLanguage\\") }}
      </button>
    </div>
  </main>
</template>

<script>
import { ref } from 'vue'
import { useI18n } from 'vue-i18n'

export default {
  name: 'App',
  setup: () => {
    const isLight = ref(true)

    const changeMode = () => {
      isLight.value = !isLight.value
    }

    const { locale } = useI18n()
    const changeLocale = () => {
      if (locale.value === 'en') {
        locale.value = 'zh'
      } else if (locale.value === 'zh') {
        locale.value = 'en'
      }
    }

    return { isLight, changeMode, changeLocale }
  }
}
</script>

<style src=\\"./assets/global-theme.css\\"></style>
<style scoped>
#app main {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  height: calc(100vh - 3.2rem);
  padding: 1rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
</style>
"
`;

exports[`ori init without plugins: A4 2`] = `
"import { createApp } from 'vue'
import { createI18n } from 'vue-i18n'
import { createRouter, createWebHistory } from 'vue-router'
import en from './locales/en.json'
import zh from './locales/zh.json'
import App from './App.vue'
import store from './store'
import Default from './layouts/default.vue'
import Index from './pages/index.vue'

const routes = [
  {
    path: '/',
    component: Default,
    children: [
      { path: '/', component: Index }
    ]
  }
]

const router = createRouter({
  history: createWebHistory(),
  routes,
})

const i18n = createI18n({
  legacy: false,
  globalInjection: true,
  locale: 'en',
  fallbackLocale: 'en',
  messages: {
    en,
    zh
  }
})

createApp(App).use(router).use(store).use(i18n).mount('#app')
"
`;

exports[`ori init without plugins: A4 3`] = `
"{
  \\"name\\": \\"test_no_plugins\\",
  \\"version\\": \\"1.0.0\\",
  \\"license\\": \\"ISC\\",
  \\"scripts\\": {
    \\"dev\\": \\"vite\\",
    \\"build\\": \\"vite build\\",
    \\"serve\\": \\"vite preview\\"
  },
  \\"dependencies\\": {
    \\"vue\\": \\"^3.0.5\\",
    \\"vue-i18n\\": \\"^9.2.0-beta.9\\",
    \\"vue-router\\": \\"^4.0.11\\",
    \\"vuex\\": \\"^4.0.2\\"
  },
  \\"devDependencies\\": {
    \\"@intlify/vue-i18n-loader\\": \\"^3.0.0\\",
    \\"@vitejs/plugin-vue\\": \\"^1.3.0\\",
    \\"@vue/compiler-sfc\\": \\"^3.0.5\\",
    \\"typescript\\": \\"^4.3.2\\",
    \\"vite\\": \\"^2.4.4\\",
    \\"vue-tsc\\": \\"^0.2.2\\"
  }
}
"
`;

exports[`ori init without plugins: A4 4`] = `
"import { defineConfig } from 'vite'
import path from 'path'
import vue from '@vitejs/plugin-vue'

// https://vitejs.dev/config/
export default defineConfig({
  resolve: {
    alias: [{
      find: '@',
      replacement: path.resolve(__dirname, 'src'),
    }],
  },
  plugins:[
    vue()
  ],
  define: {
    __VUE_I18N_FULL_INSTALL__: true,
    __VUE_I18N_LEGACY_API__: true,
  }
})
"
`;
