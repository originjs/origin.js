// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ori --help: A2 1`] = `
"Usage: ori <command> [options]

Options:
  -h, --help                 display help for command

Commands:
  init [options] <app-name>  init a new project
  dev                        alias of \\"ori dev\\" in the current project
  build                      alias of \\"ori build\\" in the current project
  tovite [options]           use vite in the current project
  tovue3 [options]           use vue-next in the current project
  help [command]             display help for command"
`;

exports[`ori -h: A1 1`] = `
"Usage: ori <command> [options]

Options:
  -h, --help                 display help for command

Commands:
  init [options] <app-name>  init a new project
  dev                        alias of \\"ori dev\\" in the current project
  build                      alias of \\"ori build\\" in the current project
  tovite [options]           use vite in the current project
  tovue3 [options]           use vue-next in the current project
  help [command]             display help for command"
`;

exports[`ori init --help: A5 1`] = `
"Usage: ori init [options] <app-name>

init a new project

Options:
  -d,--default      skip init project options
  -a,--all-plugins  create project with all plugins
  -u,--uninstalled  skip install denpendencies
  -h, --help        display help for command"
`;

exports[`ori init with all plugins: A3 1`] = `
"<template>
  <main :class=\\"isLight ? 'light' : 'dark'\\">
    <div>
      <img
        alt=\\"Origin.js logo\\"
        src=\\"./assets/originjs.png\\"
        id=\\"logo\\"
      >
    </div>
    <h2 class=\\"text-t2\\">Origin.js</h2>
    <p class=\\"text-p\\">A simple and powerful Vue.js web application framework.</p>
    <router-view />
    <button
      v-if=\\"globalStylePluginIsUsed\\"
      type=\\"button\\"
      @click=\\"changeMode\\"
      class=\\"normal-btn theme-ctrl-btn\\"
    >
      {{ !isLight ? 'light' : 'dark' }} mode
    </button>
  </main>
</template>

<script lang=\\"ts\\">
import { ref } from 'vue'

export default {
  name: 'App',
  setup: () => {
    // if '@originjs/vite-plugin-global-style' has been imported, you can 
    // set 'globalStylePluginIsUsed = ref(true)' and switch theme by clicking button
    const globalStylePluginIsUsed = ref(true)

    const isLight = ref(true)

    const changeMode = () => {
      isLight.value = !isLight.value
    }

    return { globalStylePluginIsUsed, isLight, changeMode }
  }
}
</script>

<style scoped>
#app main {
    font-family: Avenir, Helvetica, Arial, sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-align: center;
    height: calc(100vh - 3.2rem);
    padding: 1rem;
}

#logo {
    width: 12rem;
    height: 12rem;
    object-fit: cover;
    margin: 4rem 0 1rem 0;
}
</style>
"
`;

exports[`ori init with all plugins: A3 2`] = `
"import { createApp } from 'vue'
import App from './App.vue'
import { createRouter, createWebHistory } from 'vue-router'
import routes from 'virtual:plugin-pages'

const router = createRouter({
  history: createWebHistory(),
  routes,
})

createApp(App).use(router).mount('#app')
"
`;

exports[`ori init with all plugins: A3 3`] = `
"{
  \\"name\\": \\"testAllPlugins\\",
  \\"version\\": \\"1.0.0\\",
  \\"license\\": \\"ISC\\",
  \\"scripts\\": {
    \\"dev\\": \\"vite\\",
    \\"build\\": \\"vue-tsc --noEmit && vite build\\",
    \\"serve\\": \\"vite preview\\"
  },
  \\"dependencies\\": {
    \\"vue\\": \\"^3.0.5\\",
    \\"vue-router\\": \\"^4.0.11\\"
  },
  \\"devDependencies\\": {
    \\"@vitejs/plugin-vue\\": \\"^1.3.0\\",
    \\"@vue/compiler-sfc\\": \\"^3.0.5\\",
    \\"@originjs/vite-plugin-global-style\\":\\"latest\\",
    \\"unplugin-vue-components\\":\\"latest\\",
    \\"@originjs/vite-plugin-content\\":\\"latest\\",
    \\"@originjs/vite-plugin-pages\\":\\"latest\\",
    \\"typescript\\": \\"^4.3.2\\",
    \\"vite\\": \\"^2.4.4\\",
    \\"vue-tsc\\": \\"^0.2.2\\"
  }
}
"
`;

exports[`ori init with all plugins: A3 4`] = `
"import { defineConfig } from 'vite'
import vue from '@vitejs/plugin-vue'
import globalStyle from '@originjs/vite-plugin-global-style'
import Components from 'unplugin-vue-components/vite'
import content from '@originjs/vite-plugin-content'
import pages from '@originjs/vite-plugin-pages'

// https://vitejs.dev/config/
export default defineConfig({
  plugins:[
    vue(),
    globalStyle(),
    Components({
      // allow auto load markdown components under \`./src/components/\`
      extensions: ['vue', 'md'],
      // allow typescript
      dts: true,
      // allow auto import and register components used in markdown
      include: [/\\\\.vue$/, /\\\\.vue\\\\?vue/, /\\\\.md$/],
    }),
    content(),
    pages()
  ]
})
"
`;

exports[`ori init without plugins: A4 1`] = `
"<template>
  <main :class=\\"isLight ? 'light' : 'dark'\\">
    <div>
      <img
        alt=\\"Origin.js logo\\"
        src=\\"./assets/originjs.png\\"
        id=\\"logo\\"
      >
    </div>
    <h2 class=\\"text-t2\\">Origin.js</h2>
    <p class=\\"text-p\\">A simple and powerful Vue.js web application framework.</p>
    <router-view />
    <button
      v-if=\\"globalStylePluginIsUsed\\"
      type=\\"button\\"
      @click=\\"changeMode\\"
      class=\\"normal-btn theme-ctrl-btn\\"
    >
      {{ !isLight ? 'light' : 'dark' }} mode
    </button>
  </main>
</template>

<script lang=\\"ts\\">
import { ref } from 'vue'

export default {
  name: 'App',
  setup: () => {
    // if '@originjs/vite-plugin-global-style' has been imported, you can 
    // set 'globalStylePluginIsUsed = ref(true)' and switch theme by clicking button
    const globalStylePluginIsUsed = ref(false)

    const isLight = ref(true)

    const changeMode = () => {
      isLight.value = !isLight.value
    }

    return { globalStylePluginIsUsed, isLight, changeMode }
  }
}
</script>

<style scoped>
#app main {
    font-family: Avenir, Helvetica, Arial, sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-align: center;
    height: calc(100vh - 3.2rem);
    padding: 1rem;
}

#logo {
    width: 12rem;
    height: 12rem;
    object-fit: cover;
    margin: 4rem 0 1rem 0;
}
</style>
"
`;

exports[`ori init without plugins: A4 2`] = `
"import { createApp } from 'vue'
import App from './App.vue'
import { createRouter, createWebHistory } from 'vue-router'
import Default from './layouts/default.vue'

const routes = [
  { path: '/', component: Default }
]

const router = createRouter({
  history: createWebHistory(),
  routes,
})

createApp(App).use(router).mount('#app')
"
`;

exports[`ori init without plugins: A4 3`] = `
"{
  \\"name\\": \\"testNoPlugins\\",
  \\"version\\": \\"1.0.0\\",
  \\"license\\": \\"ISC\\",
  \\"scripts\\": {
    \\"dev\\": \\"vite\\",
    \\"build\\": \\"vue-tsc --noEmit && vite build\\",
    \\"serve\\": \\"vite preview\\"
  },
  \\"dependencies\\": {
    \\"vue\\": \\"^3.0.5\\",
    \\"vue-router\\": \\"^4.0.11\\"
  },
  \\"devDependencies\\": {
    \\"@vitejs/plugin-vue\\": \\"^1.3.0\\",
    \\"@vue/compiler-sfc\\": \\"^3.0.5\\",
    \\"typescript\\": \\"^4.3.2\\",
    \\"vite\\": \\"^2.4.4\\",
    \\"vue-tsc\\": \\"^0.2.2\\"
  }
}
"
`;

exports[`ori init without plugins: A4 4`] = `
"import { defineConfig } from 'vite'
import vue from '@vitejs/plugin-vue'

// https://vitejs.dev/config/
export default defineConfig({
  plugins:[
    vue()
  ]
})
"
`;
